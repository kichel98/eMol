DROP DATABASE IF EXISTS eMol;
CREATE DATABASE eMol;
USE eMol;

CREATE TABLE user_type(
id INT UNSIGNED AUTO_INCREMENT,
name VARCHAR(20),
PRIMARY KEY(id)
);
INSERT INTO user_type (name) VALUES("Publisher");
INSERT INTO user_type (name) VALUES("Customer");
INSERT INTO user_type (name) VALUES("Support");

CREATE TABLE language(
id INT UNSIGNED AUTO_INCREMENT,
name VARCHAR(20),
PRIMARY KEY(id)
);

CREATE TABLE book_type(
id INT UNSIGNED AUTO_INCREMENT,
name VARCHAR(20),
PRIMARY KEY(id)
);
INSERT INTO book_type (name) VALUES("ebook");
INSERT INTO book_type (name) VALUES("paperback");
INSERT INTO book_type (name) VALUES("audiobook");



CREATE TABLE publisher(
id INT UNSIGNED AUTO_INCREMENT NOT NULL,
user_id INT UNSIGNED,
name VARCHAR(90),
royalty DOUBLE,
PRIMARY KEY(id)
);

CREATE TABLE user(
id INT UNSIGNED AUTO_INCREMENT NOT NULL,
username VARCHAR(60) UNIQUE,
password VARCHAR(60),
user_type_id INT UNSIGNED,
PRIMARY KEY(id),
FOREIGN KEY(user_type_id) REFERENCES user_type(id)
);

CREATE TABLE book(
id INT UNSIGNED AUTO_INCREMENT NOT NULL,
isbn VARCHAR(60) UNIQUE NOT NULL,
title VARCHAR(70) NOT NULL,
subtitle VARCHAR(70),
description VARCHAR(80),
author VARCHAR(60),
price DOUBLE NOT NULL,
publisher_id INT UNSIGNED,
date DATE NOT NULL,
type INT UNSIGNED NOT NULL,
language_id INT UNSIGNED NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(publisher_id) REFERENCES publisher(id),
FOREIGN KEY(language_id) REFERENCES language(id),
FOREIGN KEY(type) REFERENCES book_type(id)
);

CREATE TABLE paperback(
book_id INT UNSIGNED NOT NULL,
pages INT NOT NULL,
PRIMARY KEY(book_id),
FOREIGN KEY(book_id) REFERENCES book(id) ON DELETE CASCADE
);

CREATE TABLE ebook(
book_id INT UNSIGNED NOT NULL,
pages INT NOT NULL,
file_size INT NOT NULL,
PRIMARY KEY(book_id),
FOREIGN KEY(book_id) REFERENCES book(id) ON DELETE CASCADE
);

CREATE TABLE audiobook(
book_id INT UNSIGNED NOT NULL,
length DOUBLE NOT NULL,
file_size INT NOT NULL,
narrator VARCHAR(90),
PRIMARY KEY(book_id),
FOREIGN KEY(book_id) REFERENCES book(id) ON DELETE CASCADE
);

CREATE TABLE review(
id INT UNSIGNED AUTO_INCREMENT NOT NULL,
book_id INT UNSIGNED,
rating INT NOT NULL,
description VARCHAR(90),
PRIMARY KEY(id),
FOREIGN KEY(book_id) REFERENCES book(id) ON DELETE CASCADE
);

CREATE TABLE inventory(
book_id INT UNSIGNED NOT NULL,
quantity INT,
PRIMARY KEY(book_id)
#FOREIGN KEY(book_id) REFERENCES book(id)
);

CREATE TABLE customer(
user_id INT UNSIGNED NOT NULL,
money DOUBLE,
PRIMARY KEY(user_id),
FOREIGN KEY(user_id) REFERENCES user(id)
);

CREATE TABLE sale(
id INT UNSIGNED AUTO_INCREMENT NOT NULL,
book_id INT UNSIGNED NOT NULL,
quantity INT NOT NULL,
customer_id INT UNSIGNED,
time TIMESTAMP,
PRIMARY KEY(id),
#FOREIGN KEY(book_id) REFERENCES book(id),
FOREIGN KEY(customer_id) REFERENCES customer(user_id)
);